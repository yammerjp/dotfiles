# This is Git's per-user configuration file.
[user]
	name = Keisuke Nakayama
	email = me@yammer.jp
[include]
	path = ~/.config/git/config-company
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[push]
	default = current
	autoSetupRemote = true
[pull]
	rebase = false
[init]
	defaultBranch = main
[core]
	editor = vim
	quotepath = false
	pager = git-split-diffs --color | less -RFX
[commit]
	verbose = true
[ghq]
	root = ~/src
[log]
	date = format:%Y/%m/%d %H:%M:%S
[alias]
	a = add
	au = "add -u" # add tracked files
	c = "commit -v"
	cm = "!f(){ git commit -m \"$*\" ; };f"
	fixit = "commit --amend --no-edit"
	d = diff
	di = "diff --ignore-all-space"
	ds = "diff --ignore-all-space --staged"
	ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
	pf = "!git push origin $(git rev-parse --abbrev-ref HEAD) --force-with-lease --force-if-includes"
	pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
	l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  lc = !git l --color=always | fzf --reverse --ansi | sed 's/[^a-z0-9 ]//g' | awk '{print $1}' | pbcopy
	diflog = log -p
	s = status --short
	tree = ls-tree -r master --name-only
	alias = "!git config --list | grep -e '^alias' | sed -e 's/alias\\.//' -e 's/=/\\t\\t/'"
	als = alias
	remote-add-origin = "!sh -c  '[ \"$1\" != \"\" ] && [ \"$2\" != \"\" ] && git remote add origin git@github.com:$1/$2.git' -"
	rao = remote-add-origin
	remote-show-origin = remote show origin
	rso = remote-show-origin
	sw = !git branch --all --format=\"%(refname:short)\" | fzf | xargs git checkout
	clean-branch = "!f () { git checkout $1; git branch --merged|egrep -v '\\*|develop|main|master'|xargs git branch -d; };f"
	worktree-new = "!bash -c 'git worktree add ~/git-worktree/$(dirname $(pwd))-$1' $1"
	latest-merged-commit = "!git log --oneline | grep -E '^[0-9a-z]+ Merge pull request #' | head -1 | awk '{print $1}'"
	merged-commit-10 = "!git log --oneline | grep -E '^[0-9a-z]+ Merge pull request #' | head -10"
	merged-commit-10-files = "!git log --oneline | grep -E '^[0-9a-z]+ Merge pull request #' | head -10 | awk '{print $1}' | xargs -III git diff II II~ --name-only | cat - "
	open-editing-vscode = "!bash -c 'git dfr --name-only | cat | xargs code'"
	open-editing = "!git dfr --name-only | xargs -o nvim"
	open-editing-prev-head = "!bash -c 'git dfp --name-only | cat | xargs -o nvim'"
	open-editing-prev-head-vscode = "!bash -c 'git dfp --name-only | cat | xargs code'"
	oe = open-editing
	oev = open-editing-vscode
	oep = open-editing-prev-head
	oepv = open-editing-prev-head-vscode
	r = "!git reflog -n 50 --pretty='format:%gs' | perl -anal -e '$seen{$1}++ or print $1 if /checkout:.*to (.+)/'"
	rsw = "!git reflog -n 50 --pretty='format:%gs' | perl -anal -e '$seen{$1}++ or print $1 if /checkout:.*to (.+)/' |  fzf --preview=' git log -p --color {}' | xargs git checkout"
	ls-files-all-history = "!git log --oneline | awk '{ print $1 }' | xargs -I{} git ls-tree -r --name-only {} | sort | uniq"
	reflog-verbose = log -g
	vv = branch -vv
	diff-from-release = "!git diff --ignore-all-space `git latest-merged-commit`"
	diff-from-prev-head = "!git diff --ignore-all-space HEAD^"
	dfr = diff-from-release
	dfp = diff-from-prev-head
	g = "!f(){ git grep "$@" ':/'; };f"
	sw2 = !git branch -a | fzf | xargs git checkout
	sw3 = !git checkout $(git branch -a | fzf )
	initc = !git init && git commit -m Initial\\ Commit --allow-empty
	sed =  "!f () { git grep -l $1 | xargs sed -i s/$1/$2/g; }; f"
	en =  "!git switch -c yammer-$(date +'%Y%m%d')-$(cat /dev/urandom | head -c 50 | sha256sum | head -c 4)"
	aic = "!ai-commit.sh"

